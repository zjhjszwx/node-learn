// console.log(global)
/* { console: [Getter],
    DTRACE_NET_SERVER_CONNECTION: [Function],
    DTRACE_NET_STREAM_END: [Function],
    DTRACE_HTTP_SERVER_REQUEST: [Function],
    DTRACE_HTTP_SERVER_RESPONSE: [Function],
    DTRACE_HTTP_CLIENT_REQUEST: [Function],
    DTRACE_HTTP_CLIENT_RESPONSE: [Function],
    global: [Circular],
    process: 
     process {
       title: 'node',
       version: 'v9.3.0',
       moduleLoadList: 
        [ 'Binding contextify',
          'Binding natives',
          'Binding config',
          'NativeModule events',
          'Binding async_wrap',
          'Binding icu',
          'NativeModule util',
          'NativeModule internal/errors',
          'Binding buffer',
          'NativeModule internal/encoding',
          'NativeModule internal/util',
          'Binding util',
          'Binding constants',
          'NativeModule internal/util/types',
          'NativeModule buffer',
          'NativeModule internal/buffer',
          'Binding uv',
          'NativeModule internal/util/comparisons',
          'NativeModule internal/process',
          'NativeModule internal/process/warning',
          'NativeModule internal/process/next_tick',
          'NativeModule async_hooks',
          'NativeModule internal/process/promises',
          'NativeModule internal/process/stdio',
          'Binding performance',
          'NativeModule perf_hooks',
          'NativeModule internal/linkedlist',
          'NativeModule internal/trace_events_async_hooks',
          'Binding trace_events',
          'NativeModule internal/inspector_async_hook',
          'Binding inspector',
          'NativeModule timers',
          'Binding timer_wrap',
          'NativeModule assert',
          'NativeModule module',
          'NativeModule internal/module',
          'NativeModule internal/url',
          'NativeModule internal/querystring',
          'NativeModule querystring',
          'Binding url',
          'NativeModule vm',
          'NativeModule fs',
          'NativeModule path',
          'Binding fs',
          'NativeModule stream',
          'NativeModule internal/streams/legacy',
          'NativeModule _stream_readable',
          'NativeModule internal/streams/BufferList',
          'NativeModule internal/streams/destroy',
          'NativeModule _stream_writable',
          'NativeModule _stream_duplex',
          'NativeModule _stream_transform',
          'NativeModule _stream_passthrough',
          'Binding fs_event_wrap',
          'NativeModule internal/fs',
          'NativeModule internal/loader/Loader',
          'NativeModule internal/loader/ModuleWrap',
          'Internal Binding module_wrap',
          'NativeModule internal/loader/ModuleMap',
          'NativeModule internal/loader/ModuleJob',
          'NativeModule internal/safe_globals',
          'NativeModule internal/loader/ModuleRequest',
          'NativeModule url',
          'NativeModule internal/loader/search',
          'NativeModule console',
          'Binding tty_wrap',
          'NativeModule tty',
          'NativeModule net',
          'NativeModule internal/net',
          'Binding cares_wrap',
          'Binding tcp_wrap',
          'Binding pipe_wrap',
          'Binding stream_wrap',
          'NativeModule dns',
          'NativeModule readline',
          'NativeModule string_decoder',
          'NativeModule internal/readline',
          'Binding signal_wrap' ],
       versions: { http_parser: '2.7.0',
    node: '9.3.0',
    v8: '6.2.414.46-node.15',
    uv: '1.18.0',
    zlib: '1.2.11',
    ares: '1.13.0',
    modules: '59',
    nghttp2: '1.25.0',
    openssl: '1.0.2n',
    icu: '60.2',
    unicode: '10.0',
    cldr: '32.0.1',
    tz: '2017c' },
       arch: 'x64',
       platform: 'darwin',
       release: 
        { name: 'node',
          sourceUrl: 'https://nodejs.org/download/release/v9.3.0/node-v9.3.0.tar.gz',
          headersUrl: 'https://nodejs.org/download/release/v9.3.0/node-v9.3.0-headers.tar.gz' },
       argv: 
        [ '/usr/local/Cellar/node/9.3.0_1/bin/node',
          '/Users/zhangwen/Sites/front-end/node/node-learn/nodeCore/global.js' ],
       execArgv: [],
       env: 
        { TMPDIR: '/var/folders/kl/02tbr1rd10d151_mrj58cjz40000gn/T/',
          SHELL: '/bin/zsh',
          HOME: '/Users/zhangwen',
          SSH_AUTH_SOCK: '/private/tmp/com.apple.launchd.rUDSFCsqoe/Listeners',
          Apple_PubSub_Socket_Render: '/private/tmp/com.apple.launchd.pvuZgXFBFW/Render',
          LOGNAME: 'zhangwen',
          PATH: '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/mysql/bin',
          XPC_SERVICE_NAME: '0',
          COMMAND_MODE: 'unix2003',
          USER: 'zhangwen',
          SECURITYSESSIONID: '186a9',
          XPC_FLAGS: '0x0',
          __CF_USER_TEXT_ENCODING: '0x1F5:0x19:0x34',
          LESS: '-R',
          LSCOLORS: 'Gxfxcxdxbxegedabagacad',
          OLDPWD: '/Users/zhangwen/Sites/front-end/node/node-learn',
          PAGER: 'less',
          PWD: '/Users/zhangwen/Sites/front-end/node/node-learn/nodeCore',
          SHLVL: '1',
          ZSH: '/Users/zhangwen/.oh-my-zsh',
          TERM_PROGRAM: 'vscode',
          TERM_PROGRAM_VERSION: '1.36.0',
          LANG: 'zh_CN.UTF-8',
          TERM: 'xterm-256color',
          LC_CTYPE: 'zh_CN.UTF-8',
          _: '/usr/local/bin/node' },
       pid: 13772,
       features: 
        { debug: false,
          uv: true,
          ipv6: true,
          tls_npn: true,
          tls_alpn: true,
          tls_sni: true,
          tls_ocsp: true,
          tls: true },
       ppid: 12139,
       execPath: '/usr/local/Cellar/node/9.3.0_1/bin/node',
       debugPort: 9229,
       _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],
       _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],
       _getActiveRequests: [Function: _getActiveRequests],
       _getActiveHandles: [Function: _getActiveHandles],
       reallyExit: [Function: reallyExit],
       abort: [Function: abort],
       chdir: [Function: chdir],
       cwd: [Function: cwd],
       umask: [Function: umask],
       getuid: [Function: getuid],
       geteuid: [Function: geteuid],
       setuid: [Function: setuid],
       seteuid: [Function: seteuid],
       setgid: [Function: setgid],
       setegid: [Function: setegid],
       getgid: [Function: getgid],
       getegid: [Function: getegid],
       getgroups: [Function: getgroups],
       setgroups: [Function: setgroups],
       initgroups: [Function: initgroups],
       _kill: [Function: _kill],
       _debugProcess: [Function: _debugProcess],
       _debugPause: [Function: _debugPause],
       _debugEnd: [Function: _debugEnd],
       hrtime: [Function: hrtime],
       cpuUsage: [Function: cpuUsage],
       dlopen: [Function: dlopen],
       uptime: [Function: uptime],
       memoryUsage: [Function: memoryUsage],
       binding: [Function: binding],
       _linkedBinding: [Function: _linkedBinding],
       _setupDomainUse: [Function: _setupDomainUse],
       _events: 
        { newListener: [Function],
          removeListener: [Function],
          warning: [Function],
          SIGWINCH: [Array] },
       _rawDebug: [Function],
       _eventsCount: 4,
       domain: null,
       _maxListeners: undefined,
       _fatalException: [Function],
       _exiting: false,
       assert: [Function],
       config: { target_defaults: [Object], variables: [Object] },
       setUncaughtExceptionCaptureCallback: [Function],
       hasUncaughtExceptionCaptureCallback: [Function],
       emitWarning: [Function],
       nextTick: [Function: nextTick],
       _tickCallback: [Function: _tickCallback],
       stdout: [Getter],
       stderr: [Getter],
       stdin: [Getter],
       openStdin: [Function],
       exit: [Function],
       kill: [Function],
       _immediateCallback: [Function: processImmediate],
       argv0: 'node',
       mainModule: 
        Module {
          id: '.',
          exports: {},
          parent: null,
          filename: '/Users/zhangwen/Sites/front-end/node/node-learn/nodeCore/global.js',
          loaded: false,
          children: [],
          paths: [Array] } },
    Buffer: 
     { [Function: Buffer]
       poolSize: 8192,
       from: [Function: from],
       alloc: [Function: alloc],
       allocUnsafe: [Function: allocUnsafe],
       allocUnsafeSlow: [Function: allocUnsafeSlow],
       isBuffer: [Function: isBuffer],
       compare: [Function: compare],
       isEncoding: [Function: isEncoding],
       concat: [Function: concat],
       byteLength: [Function: byteLength],
       [Symbol(node.isEncoding)]: [Function: isEncoding] },
    clearImmediate: [Function],
    clearInterval: [Function],
    clearTimeout: [Function],
    setImmediate: { [Function: setImmediate] [Symbol(util.promisify.custom)]: [Function] },
    setInterval: [Function],
    setTimeout: { [Function: setTimeout] [Symbol(util.promisify.custom)]: [Function] } } */

/*  console.log(__dirname);
    console.log(__filename);
    console.log(exports);
    console.log(module);
    console.log(require('./console'));
    /Users/zhangwen/Sites/front-end/node/node-learn/nodeCore
/Users/zhangwen/Sites/front-end/node/node-learn/nodeCore/global.js
{}
Module {
  id: '.',
  exports: {},
  parent: null,
  filename: '/Users/zhangwen/Sites/front-end/node/node-learn/nodeCore/global.js',
  loaded: false,
  children: [],
  paths: 
   [ '/Users/zhangwen/Sites/front-end/node/node-learn/nodeCore/node_modules',
     '/Users/zhangwen/Sites/front-end/node/node-learn/node_modules',
     '/Users/zhangwen/Sites/front-end/node/node_modules',
     '/Users/zhangwen/Sites/front-end/node_modules',
     '/Users/zhangwen/Sites/node_modules',
     '/Users/zhangwen/node_modules',
     '/Users/node_modules',
     '/node_modules' ] } */
